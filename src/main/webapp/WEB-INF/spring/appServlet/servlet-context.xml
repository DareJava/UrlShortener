<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"  xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/task
   	   http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       ">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- MySQL Datasource with Commons DBCP connection pooling -->
	<beans:bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/urlshortener" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="admin" />
	</beans:bean>

	<!-- EntityManagerFactory -->
	<beans:bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<beans:property name="database" value="MYSQL" />
				<beans:property name="showSql" value="true" />
			</beans:bean>
		</beans:property>
		<beans:property name="jpaPropertyMap">
			<beans:map>
				<beans:entry key="hibernate.hbm2ddl.auto" value="update" />
				<beans:entry key="hibernate.format_sql" value="true" />
				<beans:entry key="hibernate.show_sql" value="true" />
				<beans:entry key="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />

				<!-- Connection pooling -->
				<beans:entry key="hibernate.c3p0.min_size" value="5" />
				<beans:entry key="hibernate.c3p0.max_size" value="20" />
				<beans:entry key="hibernate.c3p0.timeout" value="1800" />
				<beans:entry key="hibernate.c3p0.max_statements" value="50" />
				<beans:entry key="hibernate.jdbc.batch_size" value="100" />

				<!-- Auditing -->
				<!-- entry key="hibernate.ejb.interceptor" value="org.common.hibernate.AuditInterceptor" /> -->

				<!-- Caching -->
				<!--
					<entry key="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider" /> <entry key="hibernate.cache.use_query_cache" value="true" />
				-->
				<!-- Extra debugging -->
				<beans:entry key="hibernate.generate_statistics value" value="true" />
				<beans:entry key="hibernate.cache.use_structured_entries" value="true" />

				
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- Transaction Manager -->
	<beans:bean class="org.springframework.orm.jpa.JpaTransactionManager"
		id="transactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>
	
	<!--  inject into container  -->
	<tx:annotation-driven transaction-manager="transactionManager" />
		
	<context:component-scan base-package="com.amacodecode" />
	
	
	
</beans:beans>
